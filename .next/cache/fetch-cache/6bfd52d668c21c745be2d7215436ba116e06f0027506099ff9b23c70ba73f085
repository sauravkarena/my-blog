{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","cache-control":"no-cache, private","connection":"Upgrade, Keep-Alive","content-encoding":"gzip","content-type":"application/json","date":"Tue, 10 Sep 2024 10:46:57 GMT","keep-alive":"timeout=5, max=75","server":"Apache","transfer-encoding":"chunked","upgrade":"h2,h2c","vary":"Accept-Encoding","x-ratelimit-limit":"60","x-ratelimit-remaining":"59"},"body":"{"id":71,"category_id":7,"name":"BUILD A WEB APPLICATION FROM SCRATCH WITH FLASK AND PYTHON","tags":null,"slug":"build-a-web-application-from-scratch-with-flask-and-python","description":"<h1 id=\"9f99\" class=\"mz na gt be nb nc nd ne nf ng nh ni nj nk nl nm nn no np nq nr ns nt nu nv nw bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 1.95em 0px -0.28em; font-family: sohne, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; color: rgb(36, 36, 36); line-height: 30px; letter-spacing: -0.016em; font-weight: 600; font-size: 24px;\">Introduction<\/h1><p id=\"921f\" class=\"pw-post-body-paragraph nx ny gt nz b oa ob oc od oe of og oh oi oj ok ol om on oo op oq or os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 0.94em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\">Flask is a popular micro-framework in Python for creating lightweight and scalable web applications. In this walkthrough, we will build a web application from scratch using Flask and Python. By the end of this article, you will have a basic understanding of how to create a web application, set up routes, and work with templates.<\/p><h2 id=\"a792\" class=\"ov na gt be nb ow ox dx nf oy oz dz nj oi pa pb pc om pd pe pf oq pg ph pi pj bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 1.72em 0px -0.31em; font-family: sohne, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; color: rgb(36, 36, 36); font-weight: 600; line-height: 24px; font-size: 20px;\">Requirements:<\/h2><ol class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"c9fe\" class=\"nx ny gt nz b oa ob oc od oe of og oh oi oj ok ol om on oo op oq or os ot ou pk pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; list-style-type: decimal; margin-left: 30px; padding-left: 0px; font-size: 20px; margin-top: 0.94em;\">Python 3.6 or later<\/li><li id=\"f1f2\" class=\"nx ny gt nz b oa pn oc od oe po og oh oi pp ok ol om pq oo op oq pr os ot ou pk pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; list-style-type: decimal; margin-left: 30px; padding-left: 0px; font-size: 20px; margin-top: 1.14em;\">Flask (install it using&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">pip install Flask<\/code>)<\/li><\/ol><h1 id=\"8c02\" class=\"mz na gt be nb nc nd ne nf ng nh ni nj nk nl nm nn no np nq nr ns nt nu nv nw bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 1.95em 0px -0.28em; font-family: sohne, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; color: rgb(36, 36, 36); line-height: 30px; letter-spacing: -0.016em; font-weight: 600; font-size: 24px;\">Step 1: Setting up the Flask Application<\/h1><p id=\"7da0\" class=\"pw-post-body-paragraph nx ny gt nz b oa ob oc od oe of og oh oi oj ok ol om on oo op oq or os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 0.94em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\">To begin developing your web application, start by creating a dedicated directory to house your project files. This organization is crucial as your application scales and potentially integrates more components.<\/p><ul class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"fa66\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 2.14em;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">Create Project Directory:<\/span>&nbsp;Open your terminal or command prompt and run the following commands to create a new directory and navigate into it:<\/li><\/ul><pre class=\"qc qd qe qf qg qh pv qi bo qj ba bj\" style=\"box-sizing: inherit; margin-top: 56px; margin-bottom: 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium;\"><span id=\"b404\" class=\"qk na gt pv b bf ql qm l qn qo\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; display: block; font-size: 14px; letter-spacing: -0.022em; line-height: 1.4; margin-top: -0.2em; margin-bottom: -0.2em; min-width: fit-content;\"><span class=\"hljs-built_in\" style=\"box-sizing: inherit; color: rgb(92, 38, 153);\">mkdir<\/span> briskbrain_flask_app<br style=\"box-sizing: inherit;\"><span class=\"hljs-built_in\" style=\"box-sizing: inherit; color: rgb(92, 38, 153);\">cd<\/span> briskbrain_flask_app<\/span><\/pre><ul class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"025a\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 2.14em;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">Create a Python File:<\/span>&nbsp;Within this directory, create a file named&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">app.py<\/code>. This file will serve as the entry point for your Flask application. You can use any text editor to create and edit this file.<\/li><\/ul><pre class=\"qc qd qe qf qg qh pv qi bo qj ba bj\" style=\"box-sizing: inherit; margin-top: 56px; margin-bottom: 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium;\"><span id=\"eeff\" class=\"qk na gt pv b bf ql qm l qn qo\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; display: block; font-size: 14px; letter-spacing: -0.022em; line-height: 1.4; margin-top: -0.2em; margin-bottom: -0.2em; min-width: fit-content;\"><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">from<\/span> flask <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import<\/span> Flask<br style=\"box-sizing: inherit;\"><br style=\"box-sizing: inherit;\">app = Flask(__name__)  <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(0, 116, 0);\"># Create a Flask instance<\/span><br style=\"box-sizing: inherit;\"><br style=\"box-sizing: inherit;\"><span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(0, 116, 0);\"># Define a basic route and a function that will be called when accessing the root URL<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(100, 56, 32);\">@app.route(<span class=\"hljs-params\" style=\"box-sizing: inherit; color: rgb(92, 38, 153);\"><span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'\/'<\/span><\/span>)<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">def<\/span> <span class=\"hljs-title.function\" style=\"box-sizing: inherit;\">home<\/span>():<br style=\"box-sizing: inherit;\">    <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">return<\/span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'Hello BriskBrain, Flask!'<\/span><br style=\"box-sizing: inherit;\"><br style=\"box-sizing: inherit;\"><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">if<\/span> __name__ == <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"__main__\"<\/span>:<br style=\"box-sizing: inherit;\">    app.run(debug=<span class=\"hljs-literal\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">True<\/span>)  <span class=\"hljs-comment\" style=\"box-sizing: inherit; color: rgb(0, 116, 0);\"># Run the app in debug mode<\/span><\/span><\/pre><p id=\"bae9\" class=\"pw-post-body-paragraph nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 2.14em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">Explanation:<\/span><\/p><ul class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"df8c\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 2.14em;\"><code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700; font-family: inherit;\">from flask import Flask<\/span><\/code><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">:<\/span>&nbsp;Imports the Flask class from the Flask library.<\/li><li id=\"7306\" class=\"nx ny gt nz b oa pn oc od oe po og oh oi pp ok ol om pq oo op oq pr os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 1.14em;\"><code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700; font-family: inherit;\">app = Flask(__name__)<\/span><\/code><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">:<\/span>&nbsp;Instantiates the Flask class.&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">__name__<\/code>&nbsp;is a Python special variable which is set to the name of the module in which it is used.<\/li><li id=\"f897\" class=\"nx ny gt nz b oa pn oc od oe po og oh oi pp ok ol om pq oo op oq pr os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 1.14em;\"><code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700; font-family: inherit;\">app.route('\/')<\/span><\/code><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">:&nbsp;<\/span>The decorator that tells Flask what URL should trigger the function that follows.<\/li><li id=\"a94b\" class=\"nx ny gt nz b oa pn oc od oe po og oh oi pp ok ol om pq oo op oq pr os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 1.14em;\"><code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700; font-family: inherit;\">app.run(debug=True)<\/span><\/code><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">:<\/span>&nbsp;Starts the application with the ability to print out possible Python errors on the web page. This will help you trace the errors.<\/li><\/ul><h1 id=\"fdcd\" class=\"mz na gt be nb nc nd ne nf ng nh ni nj nk nl nm nn no np nq nr ns nt nu nv nw bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 1.95em 0px -0.28em; font-family: sohne, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; color: rgb(36, 36, 36); line-height: 30px; letter-spacing: -0.016em; font-weight: 600; font-size: 24px;\">Step 2: Adding Routes<\/h1><p id=\"4713\" class=\"pw-post-body-paragraph nx ny gt nz b oa ob oc od oe of og oh oi oj ok ol om on oo op oq or os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 0.94em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\">Routes are essential in Flask as they define the endpoints and HTTP methods your application can handle. Each route is associated with a Python function, which is executed when the route is accessed.<\/p><ul class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"d5b5\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 2.14em;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">Create a Simple Route:&nbsp;<\/span>Let\u2019s define a basic route to our application:<\/li><\/ul><pre class=\"qc qd qe qf qg qh pv qi bo qj ba bj\" style=\"box-sizing: inherit; margin-top: 56px; margin-bottom: 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium;\"><span id=\"6eaa\" class=\"qk na gt pv b bf ql qm l qn qo\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; display: block; font-size: 14px; letter-spacing: -0.022em; line-height: 1.4; margin-top: -0.2em; margin-bottom: -0.2em; min-width: fit-content;\"><span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(100, 56, 32);\">@app.route(<span class=\"hljs-params\" style=\"box-sizing: inherit; color: rgb(92, 38, 153);\"><span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'\/'<\/span><\/span>)<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">def<\/span> <span class=\"hljs-title.function\" style=\"box-sizing: inherit;\">home<\/span>():<br style=\"box-sizing: inherit;\">    <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">return<\/span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'Welcome to the Flask App from BriskBrain Technologies!'<\/span><\/span><\/pre><ul class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"239e\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 2.14em;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">Adding a New Route:<\/span><\/li><\/ul><p id=\"6ec5\" class=\"pw-post-body-paragraph nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 2.14em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\">Suppose we want a page that greets the user by name. We add another route as follows:<\/p><pre class=\"qc qd qe qf qg qh pv qi bo qj ba bj\" style=\"box-sizing: inherit; margin-top: 56px; margin-bottom: 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium;\"><span id=\"30bc\" class=\"qk na gt pv b bf ql qm l qn qo\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; display: block; font-size: 14px; letter-spacing: -0.022em; line-height: 1.4; margin-top: -0.2em; margin-bottom: -0.2em; min-width: fit-content;\"><span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(100, 56, 32);\">@app.route(<span class=\"hljs-params\" style=\"box-sizing: inherit; color: rgb(92, 38, 153);\"><span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'\/briskbrainteam\/&lt;name&gt;'<\/span><\/span>)<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">def<\/span> <span style=\"color: rgb(196, 26, 22); letter-spacing: -0.308px;\">briskbrainteam<\/span>(<span class=\"hljs-params\" style=\"box-sizing: inherit; color: rgb(92, 38, 153);\">name<\/span>):<br style=\"box-sizing: inherit;\">    <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">return<\/span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">f'Hello, <span class=\"hljs-subst\" style=\"box-sizing: inherit; color: rgb(0, 0, 0);\">{name}<\/span>!'<\/span><\/span><\/pre><p id=\"b88d\" class=\"pw-post-body-paragraph nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 2.14em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">Explanation:<\/span><\/p><ul class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"4f37\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 2.14em;\">The route&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">\/<span style=\"color: rgb(196, 26, 22); font-size: 14px; letter-spacing: -0.308px; white-space: pre; background-color: rgb(249, 249, 249);\">briskbrainteam<\/span>\/&lt;name&gt;<\/code>&nbsp;is a dynamic route that accepts an input from the URL.<\/li><li id=\"80ef\" class=\"nx ny gt nz b oa pn oc od oe po og oh oi pp ok ol om pq oo op oq pr os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 1.14em;\"><code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\"><span style=\"color: rgb(196, 26, 22); font-size: 14px; letter-spacing: -0.308px; white-space: pre; background-color: rgb(249, 249, 249);\">briskbrainteam<\/span>(name)<\/code>&nbsp;is the function that will be invoked at this route.<\/li><\/ul><h1 id=\"2b93\" class=\"mz na gt be nb nc nd ne nf ng nh ni nj nk nl nm nn no np nq nr ns nt nu nv nw bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 1.95em 0px -0.28em; font-family: sohne, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; color: rgb(36, 36, 36); line-height: 30px; letter-spacing: -0.016em; font-weight: 600; font-size: 24px;\">Step 3: Using Templates<\/h1><p id=\"ffec\" class=\"pw-post-body-paragraph nx ny gt nz b oa ob oc od oe of og oh oi oj ok ol om on oo op oq or os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 0.94em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\">To make web pages dynamic, we use Jinja2 templates, which are integrated with Flask. Templates allow you to inject data into HTML files from your Flask application.<\/p><ul class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"76cb\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 2.14em;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">Set Up Templates Directory:<\/span><\/li><\/ul><ol class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"1a11\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou pk pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; list-style-type: decimal; margin-left: 30px; padding-left: 0px; font-size: 20px; margin-top: 2.14em;\">Create a folder named&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">templates<\/code>&nbsp;in your project directory.<\/li><li id=\"8abb\" class=\"nx ny gt nz b oa pn oc od oe po og oh oi pp ok ol om pq oo op oq pr os ot ou pk pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; list-style-type: decimal; margin-left: 30px; padding-left: 0px; font-size: 20px; margin-top: 1.14em;\">Inside this folder, create an HTML file named&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">index.html<\/code>.<\/li><\/ol><pre class=\"qc qd qe qf qg qh pv qi bo qj ba bj\" style=\"box-sizing: inherit; margin-top: 56px; margin-bottom: 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium;\"><span id=\"09c2\" class=\"qk na gt pv b bf ql qm l qn qo\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; display: block; font-size: 14px; letter-spacing: -0.022em; line-height: 1.4; margin-top: -0.2em; margin-bottom: -0.2em; min-width: fit-content;\"><span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(100, 56, 32);\">&lt;!DOCTYPE <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">html<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">html<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">lang<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"en\"<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">head<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\">    <span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">meta<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">charset<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"UTF-8\"<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\">    <span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">meta<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">name<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"viewport\"<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">content<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"width=device-width, initial-scale=1.0\"<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\">    <span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">title<\/span>&gt;BriskBrain <\/span>Flask App<span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;\/<span class=\"hljs-name\" style=\"box-sizing: inherit;\">title<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;\/<span class=\"hljs-name\" style=\"box-sizing: inherit;\">head<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">body<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\">    <span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">h1<\/span>&gt;<\/span>{{ message }}<span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;\/<span class=\"hljs-name\" style=\"box-sizing: inherit;\">h1<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;\/<span class=\"hljs-name\" style=\"box-sizing: inherit;\">body<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;\/<span class=\"hljs-name\" style=\"box-sizing: inherit;\">html<\/span>&gt;<\/span><\/span><\/pre><ul class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"0765\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 2.14em;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">Modify the Home Function:<\/span><\/li><\/ul><p id=\"8763\" class=\"pw-post-body-paragraph nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 2.14em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\">Modify the&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">home<\/code>&nbsp;function in&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">app.py<\/code>&nbsp;to render the&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">index.html<\/code>&nbsp;file<\/p><pre class=\"qc qd qe qf qg qh pv qi bo qj ba bj\" style=\"box-sizing: inherit; margin-top: 56px; margin-bottom: 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium;\"><span id=\"9eb2\" class=\"qk na gt pv b bf ql qm l qn qo\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; display: block; font-size: 14px; letter-spacing: -0.022em; line-height: 1.4; margin-top: -0.2em; margin-bottom: -0.2em; min-width: fit-content;\"><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">from<\/span> flask <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import<\/span> render_template<br style=\"box-sizing: inherit;\"><br style=\"box-sizing: inherit;\"><span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(100, 56, 32);\">@app.route(<span class=\"hljs-params\" style=\"box-sizing: inherit; color: rgb(92, 38, 153);\"><span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'\/'<\/span><\/span>)<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">def<\/span> <span class=\"hljs-title.function\" style=\"box-sizing: inherit;\">home<\/span>():<br style=\"box-sizing: inherit;\">    <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">return<\/span> render_template(<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'index.html'<\/span>, message=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'Welcome to Briskbrain Team!'<\/span>)<\/span><\/pre><p id=\"5ad0\" class=\"pw-post-body-paragraph nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 2.14em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">Explanation:<\/span><\/p><ul class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"5b92\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 2.14em;\"><code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">render_template<\/code>&nbsp;is used to generate output from a template file based on the Jinja2 engine that Flask uses.<\/li><\/ul><h1 id=\"828c\" class=\"mz na gt be nb nc nd ne nf ng nh ni nj nk nl nm nn no np nq nr ns nt nu nv nw bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 1.95em 0px -0.28em; font-family: sohne, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; color: rgb(36, 36, 36); line-height: 30px; letter-spacing: -0.016em; font-weight: 600; font-size: 24px;\">Step 4: Working with Forms<\/h1><p id=\"82d5\" class=\"pw-post-body-paragraph nx ny gt nz b oa ob oc od oe of og oh oi oj ok ol om on oo op oq or os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 0.94em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\">Handling form data is straightforward in Flask. You can easily gather data submitted by users and process it.<\/p><ul class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"3d72\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 2.14em;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">Create a Form Template:<\/span><\/li><\/ul><p id=\"59ea\" class=\"pw-post-body-paragraph nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 2.14em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\">In the&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">templates<\/code>&nbsp;folder, create another HTML file called&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">form.html<\/code>:<\/p><pre class=\"qc qd qe qf qg qh pv qi bo qj ba bj\" style=\"box-sizing: inherit; margin-top: 56px; margin-bottom: 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium;\"><span id=\"568c\" class=\"qk na gt pv b bf ql qm l qn qo\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; display: block; font-size: 14px; letter-spacing: -0.022em; line-height: 1.4; margin-top: -0.2em; margin-bottom: -0.2em; min-width: fit-content;\"><span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(100, 56, 32);\">&lt;!DOCTYPE <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">html<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">html<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">lang<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"en\"<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">head<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\">    <span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">meta<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">charset<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"UTF-8\"<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\">    <span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">meta<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">name<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"viewport\"<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">content<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"width=device-width, initial-scale=1.0\"<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\">    <span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">title<\/span>&gt;BriskBrain <\/span>Form Example<span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;\/<span class=\"hljs-name\" style=\"box-sizing: inherit;\">title<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;\/<span class=\"hljs-name\" style=\"box-sizing: inherit;\">head<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">body<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\">    <span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">form<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">action<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"\/submit\"<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">method<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"POST\"<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\">        <span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">label<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">for<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"name\"<\/span>&gt;<\/span>Name:<span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;\/<span class=\"hljs-name\" style=\"box-sizing: inherit;\">label<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\">        <span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">input<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">type<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"text\"<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">id<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"name\"<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">name<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"name\"<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">required<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\">        <span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;<span class=\"hljs-name\" style=\"box-sizing: inherit;\">button<\/span> <span class=\"hljs-attr\" style=\"box-sizing: inherit; color: rgb(131, 108, 40);\">type<\/span>=<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">\"submit\"<\/span>&gt;<\/span>Submit<span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;\/<span class=\"hljs-name\" style=\"box-sizing: inherit;\">button<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\">    <span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;\/<span class=\"hljs-name\" style=\"box-sizing: inherit;\">form<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;\/<span class=\"hljs-name\" style=\"box-sizing: inherit;\">body<\/span>&gt;<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-tag\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">&lt;\/<span class=\"hljs-name\" style=\"box-sizing: inherit;\">html<\/span>&gt;<\/span><\/span><\/pre><ul class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"618c\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 2.14em;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">Handle Form Submission:<\/span><\/li><\/ul><p id=\"7384\" class=\"pw-post-body-paragraph nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 2.14em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\">Add routes to display the form and to handle the form submission:<\/p><pre class=\"qc qd qe qf qg qh pv qi bo qj ba bj\" style=\"box-sizing: inherit; margin-top: 56px; margin-bottom: 0px; background: rgb(249, 249, 249); color: rgb(36, 36, 36); border-radius: 4px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace; padding: 32px; border: 1px solid rgb(229, 229, 229); font-size: medium;\"><span id=\"cac1\" class=\"qk na gt pv b bf ql qm l qn qo\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; display: block; font-size: 14px; letter-spacing: -0.022em; line-height: 1.4; margin-top: -0.2em; margin-bottom: -0.2em; min-width: fit-content;\"><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">from<\/span> flask <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">import<\/span> request<br style=\"box-sizing: inherit;\"><br style=\"box-sizing: inherit;\"><span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(100, 56, 32);\">@app.route(<span class=\"hljs-params\" style=\"box-sizing: inherit; color: rgb(92, 38, 153);\"><span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'\/form'<\/span><\/span>)<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">def<\/span> <span class=\"hljs-title.function\" style=\"box-sizing: inherit;\">form<\/span>():<br style=\"box-sizing: inherit;\">    <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">return<\/span> render_template(<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'form.html'<\/span>)<br style=\"box-sizing: inherit;\"><br style=\"box-sizing: inherit;\"><span class=\"hljs-meta\" style=\"box-sizing: inherit; color: rgb(100, 56, 32);\">@app.route(<span class=\"hljs-params\" style=\"box-sizing: inherit; color: rgb(92, 38, 153);\"><span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'\/submit'<\/span>, methods=[<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'POST'<\/span>]<\/span>)<\/span><br style=\"box-sizing: inherit;\"><span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">def<\/span> <span class=\"hljs-title.function\" style=\"box-sizing: inherit;\">submit<\/span>():<br style=\"box-sizing: inherit;\">    name = request.form[<span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">'name'<\/span>]<br style=\"box-sizing: inherit;\">    <span class=\"hljs-keyword\" style=\"box-sizing: inherit; color: rgb(170, 13, 145);\">return<\/span> <span class=\"hljs-string\" style=\"box-sizing: inherit; color: rgb(196, 26, 22);\">f'Hello, <span class=\"hljs-subst\" style=\"box-sizing: inherit; color: rgb(0, 0, 0);\">{name}<\/span>!'<\/span><\/span><\/pre><p id=\"9628\" class=\"pw-post-body-paragraph nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 2.14em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\"><span class=\"nz gu\" style=\"box-sizing: inherit; font-weight: 700;\">Explanation:<\/span><\/p><ul class=\"\" style=\"box-sizing: inherit; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; list-style: none none; color: rgba(0, 0, 0, 0.8); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: medium;\"><li id=\"5073\" class=\"nx ny gt nz b oa pw oc od oe px og oh oi py ok ol om pz oo op oq qa os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 2.14em;\">The form in&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">form.html<\/code>&nbsp;submits a POST request to the&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">\/submit<\/code>&nbsp;route.<\/li><li id=\"4a01\" class=\"nx ny gt nz b oa pn oc od oe po og oh oi pp ok ol om pq oo op oq pr os ot ou qb pl pm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; color: rgb(36, 36, 36); line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; margin-bottom: -0.46em; margin-left: 30px; padding-left: 0px; list-style-type: disc; font-size: 20px; margin-top: 1.14em;\">The&nbsp;<code class=\"cw ps pt pu pv b\" style=\"box-sizing: inherit; background-color: rgb(242, 242, 242); padding: 2px 4px; font-size: 15px; font-family: source-code-pro, Menlo, Monaco, &quot;Courier New&quot;, Courier, monospace;\">submit()<\/code>&nbsp;function retrieves data from the form and returns a personalized greeting.<\/li><\/ul><h1 id=\"d8de\" class=\"mz na gt be nb nc nd ne nf ng nh ni nj nk nl nm nn no np nq nr ns nt nu nv nw bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 1.95em 0px -0.28em; font-family: sohne, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; color: rgb(36, 36, 36); line-height: 30px; letter-spacing: -0.016em; font-weight: 600; font-size: 24px;\">Conclusion<\/h1><p id=\"3767\" class=\"pw-post-body-paragraph nx ny gt nz b oa ob oc od oe of og oh oi oj ok ol om on oo op oq or os ot ou gm bj\" data-selectable-paragraph=\"\" style=\"box-sizing: inherit; margin: 0.94em 0px -0.46em; color: rgb(36, 36, 36); word-break: break-word; line-height: 32px; letter-spacing: -0.003em; font-family: source-serif-pro, Georgia, Cambria, &quot;Times New Roman&quot;, Times, serif; font-size: 20px;\">This guide provided a fundamental walkthrough for creating a simple web application using Flask, Python\u2019s micro-framework. We covered setting up your project, defining routes, using templates for dynamic content, and handling form data. With these core components, you now possess the basic skills to expand your application further. You might consider adding advanced features like user authentication, integrating a database, or developing RESTful APIs to enhance functionality and user experience. Explore and experiment to make the most of what Flask has to offer!<\/p>","yt_iframe":"Building a Web Application from Scratch with Flask and Python","image":"\/images\/post\/1717754164.webp","meta_title":"Buildi a Web Application from Scratch with Flask and Python","meta_description":"Flask is a popular micro-framework in Python for creating lightweight and scalable web applications.we will build a web application from scratch using Flask and Python.","meta_keywords":"Flask, Python, Django, Python Django Rest framework,  Python APIs, Python Development, Django Framework, PostgreSQL,","status":0,"created_by":null,"created_at":"2024-06-07T09:53:41.000000Z","updated_at":"2024-06-07T10:56:31.000000Z"}","status":200,"url":"https://briskbraintech.com/api/blogs/build-a-web-application-from-scratch-with-flask-and-python"},"revalidate":3600,"tags":[]}